// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid())
  email           String?  @unique
  phone           String?  @unique
  passwordHash    String?
  role            Role
  isEmailVerified Boolean  @default(false)
  twoFAEnabled    Boolean  @default(false)
  twoFASecret     String?
  lastLoginAt     DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  sessions        Session[]
  tokens          Token[]
  otps            OtpCode[]
}


model Session {
  id               String      @id @default(cuid())
  userId           String 
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshHash      String    // bcrypt hash of refresh token
  userAgent        String?
  ip               String?
  createdAt        DateTime    @default(now())
  expiresAt        DateTime
  revokedAt        DateTime?
}

model Token {
  id               String    @id @default(cuid())
  userId           String
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  type             TokenType
  tokenHash        String    // sha256(token)
  expiresAt        DateTime
  consumedAt       DateTime?
  createdAt        DateTime  @default(now())

  @@index([userId, type, expiresAt])
}

model OtpCode {
  id               String    @id @default(cuid())
  userId           String?
  user             User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  destination      String    // email or phone
  channel          OtpChannel
  purpose          OtpPurpose
  code             String
  expiresAt        DateTime
  consumedAt       DateTime?
  createdAt        DateTime  @default(now())

  @@index([destination, purpose, expiresAt])
}

enum Role {
  MERCHANT
  DRIVER
  ADMIN
}

enum TokenType {
  EMAIL_VERIFY
  PASSWORD_RESET
}

enum OtpChannel {
  EMAIL
  SMS
}

enum OtpPurpose {
  LOGIN
  STEP_UP   // 2nd factor via OTP (fallback if no TOTP)
}